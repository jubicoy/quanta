/*
 * This file is generated by jOOQ.
 */
package fi.jubic.quanta.db.tables;


import fi.jubic.quanta.db.DefaultSchema;
import fi.jubic.quanta.db.Keys;
import fi.jubic.quanta.db.tables.records.SeriesResultRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeriesResult extends TableImpl<SeriesResultRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>series_result</code>
     */
    public static final SeriesResult SERIES_RESULT = new SeriesResult();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SeriesResultRecord> getRecordType() {
        return SeriesResultRecord.class;
    }

    /**
     * The column <code>series_result.id</code>.
     */
    public final TableField<SeriesResultRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>series_result.invocation_id</code>.
     */
    public final TableField<SeriesResultRecord, Long> INVOCATION_ID = createField(DSL.name("invocation_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>series_result.table_name</code>.
     */
    public final TableField<SeriesResultRecord, String> TABLE_NAME = createField(DSL.name("table_name"), SQLDataType.VARCHAR(512).nullable(false), this, "");

    private SeriesResult(Name alias, Table<SeriesResultRecord> aliased) {
        this(alias, aliased, null);
    }

    private SeriesResult(Name alias, Table<SeriesResultRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>series_result</code> table reference
     */
    public SeriesResult(String alias) {
        this(DSL.name(alias), SERIES_RESULT);
    }

    /**
     * Create an aliased <code>series_result</code> table reference
     */
    public SeriesResult(Name alias) {
        this(alias, SERIES_RESULT);
    }

    /**
     * Create a <code>series_result</code> table reference
     */
    public SeriesResult() {
        this(DSL.name("series_result"), null);
    }

    public <O extends Record> SeriesResult(Table<O> child, ForeignKey<O, SeriesResultRecord> key) {
        super(child, key, SERIES_RESULT);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<SeriesResultRecord, Long> getIdentity() {
        return (Identity<SeriesResultRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<SeriesResultRecord> getPrimaryKey() {
        return Keys.SERIES_RESULT_PKEY;
    }

    @Override
    public List<UniqueKey<SeriesResultRecord>> getKeys() {
        return Arrays.<UniqueKey<SeriesResultRecord>>asList(Keys.SERIES_RESULT_PKEY);
    }

    @Override
    public List<ForeignKey<SeriesResultRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SeriesResultRecord, ?>>asList(Keys.SERIES_RESULT__FK_RESULT_INVOCATION_ID);
    }

    public Invocation invocation() {
        return new Invocation(this, Keys.SERIES_RESULT__FK_RESULT_INVOCATION_ID);
    }

    @Override
    public SeriesResult as(String alias) {
        return new SeriesResult(DSL.name(alias), this);
    }

    @Override
    public SeriesResult as(Name alias) {
        return new SeriesResult(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SeriesResult rename(String name) {
        return new SeriesResult(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SeriesResult rename(Name name) {
        return new SeriesResult(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
