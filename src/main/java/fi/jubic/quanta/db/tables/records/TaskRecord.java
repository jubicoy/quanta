/*
 * This file is generated by jOOQ.
 */
package fi.jubic.quanta.db.tables.records;


import fi.jubic.quanta.db.tables.Task;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskRecord extends UpdatableRecordImpl<TaskRecord> implements Record8<Long, String, Long, String, String, Long, String, Timestamp> {

    private static final long serialVersionUID = -168530128;

    /**
     * Setter for <code>task.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>task.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>task.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>task.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>task.worker_def_id</code>.
     */
    public void setWorkerDefId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>task.worker_def_id</code>.
     */
    public Long getWorkerDefId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>task.config</code>.
     */
    public void setConfig(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>task.config</code>.
     */
    public String getConfig() {
        return (String) get(3);
    }

    /**
     * Setter for <code>task.cron_trigger</code>.
     */
    public void setCronTrigger(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>task.cron_trigger</code>.
     */
    public String getCronTrigger() {
        return (String) get(4);
    }

    /**
     * Setter for <code>task.task_trigger</code>.
     */
    public void setTaskTrigger(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>task.task_trigger</code>.
     */
    public Long getTaskTrigger() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>task.task_type</code>.
     */
    public void setTaskType(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>task.task_type</code>.
     */
    public String getTaskType() {
        return (String) get(6);
    }

    /**
     * Setter for <code>task.deleted_at</code>.
     */
    public void setDeletedAt(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>task.deleted_at</code>.
     */
    public Timestamp getDeletedAt() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, Long, String, String, Long, String, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, Long, String, String, Long, String, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Task.TASK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Task.TASK.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Task.TASK.WORKER_DEF_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Task.TASK.CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Task.TASK.CRON_TRIGGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return Task.TASK.TASK_TRIGGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Task.TASK.TASK_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Task.TASK.DELETED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getWorkerDefId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCronTrigger();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getTaskTrigger();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getTaskType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getWorkerDefId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCronTrigger();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getTaskTrigger();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getTaskType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value3(Long value) {
        setWorkerDefId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value4(String value) {
        setConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value5(String value) {
        setCronTrigger(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value6(Long value) {
        setTaskTrigger(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value7(String value) {
        setTaskType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value8(Timestamp value) {
        setDeletedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord values(Long value1, String value2, Long value3, String value4, String value5, Long value6, String value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(Task.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(Long id, String name, Long workerDefId, String config, String cronTrigger, Long taskTrigger, String taskType, Timestamp deletedAt) {
        super(Task.TASK);

        set(0, id);
        set(1, name);
        set(2, workerDefId);
        set(3, config);
        set(4, cronTrigger);
        set(5, taskTrigger);
        set(6, taskType);
        set(7, deletedAt);
    }
}
