/*
 * This file is generated by jOOQ.
 */
package fi.jubic.quanta.db.tables.records;


import fi.jubic.quanta.db.tables.WorkerParameter;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkerParameterRecord extends UpdatableRecordImpl<WorkerParameterRecord> implements Record7<Long, String, String, String, String, Boolean, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>worker_parameter.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>worker_parameter.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>worker_parameter.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>worker_parameter.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>worker_parameter.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>worker_parameter.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>worker_parameter.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>worker_parameter.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>worker_parameter.default_value</code>.
     */
    public void setDefaultValue(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>worker_parameter.default_value</code>.
     */
    public String getDefaultValue() {
        return (String) get(4);
    }

    /**
     * Setter for <code>worker_parameter.nullable</code>.
     */
    public void setNullable(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>worker_parameter.nullable</code>.
     */
    public Boolean getNullable() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>worker_parameter.worker_definition_id</code>.
     */
    public void setWorkerDefinitionId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>worker_parameter.worker_definition_id</code>.
     */
    public Long getWorkerDefinitionId() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, String, Boolean, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, String, Boolean, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return WorkerParameter.WORKER_PARAMETER.ID;
    }

    @Override
    public Field<String> field2() {
        return WorkerParameter.WORKER_PARAMETER.NAME;
    }

    @Override
    public Field<String> field3() {
        return WorkerParameter.WORKER_PARAMETER.DESCRIPTION;
    }

    @Override
    public Field<String> field4() {
        return WorkerParameter.WORKER_PARAMETER.TYPE;
    }

    @Override
    public Field<String> field5() {
        return WorkerParameter.WORKER_PARAMETER.DEFAULT_VALUE;
    }

    @Override
    public Field<Boolean> field6() {
        return WorkerParameter.WORKER_PARAMETER.NULLABLE;
    }

    @Override
    public Field<Long> field7() {
        return WorkerParameter.WORKER_PARAMETER.WORKER_DEFINITION_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getDefaultValue();
    }

    @Override
    public Boolean component6() {
        return getNullable();
    }

    @Override
    public Long component7() {
        return getWorkerDefinitionId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getDefaultValue();
    }

    @Override
    public Boolean value6() {
        return getNullable();
    }

    @Override
    public Long value7() {
        return getWorkerDefinitionId();
    }

    @Override
    public WorkerParameterRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public WorkerParameterRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public WorkerParameterRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public WorkerParameterRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public WorkerParameterRecord value5(String value) {
        setDefaultValue(value);
        return this;
    }

    @Override
    public WorkerParameterRecord value6(Boolean value) {
        setNullable(value);
        return this;
    }

    @Override
    public WorkerParameterRecord value7(Long value) {
        setWorkerDefinitionId(value);
        return this;
    }

    @Override
    public WorkerParameterRecord values(Long value1, String value2, String value3, String value4, String value5, Boolean value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WorkerParameterRecord
     */
    public WorkerParameterRecord() {
        super(WorkerParameter.WORKER_PARAMETER);
    }

    /**
     * Create a detached, initialised WorkerParameterRecord
     */
    public WorkerParameterRecord(Long id, String name, String description, String type, String defaultValue, Boolean nullable, Long workerDefinitionId) {
        super(WorkerParameter.WORKER_PARAMETER);

        setId(id);
        setName(name);
        setDescription(description);
        setType(type);
        setDefaultValue(defaultValue);
        setNullable(nullable);
        setWorkerDefinitionId(workerDefinitionId);
    }
}
