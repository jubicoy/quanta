/*
 * This file is generated by jOOQ.
 */
package fi.jubic.quanta.db.tables.records;


import fi.jubic.quanta.db.tables.SeriesResult;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeriesResultRecord extends UpdatableRecordImpl<SeriesResultRecord> implements Record3<Long, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>series_result.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>series_result.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>series_result.invocation_id</code>.
     */
    public void setInvocationId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>series_result.invocation_id</code>.
     */
    public Long getInvocationId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>series_result.table_name</code>.
     */
    public void setTableName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>series_result.table_name</code>.
     */
    public String getTableName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SeriesResult.SERIES_RESULT.ID;
    }

    @Override
    public Field<Long> field2() {
        return SeriesResult.SERIES_RESULT.INVOCATION_ID;
    }

    @Override
    public Field<String> field3() {
        return SeriesResult.SERIES_RESULT.TABLE_NAME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getInvocationId();
    }

    @Override
    public String component3() {
        return getTableName();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getInvocationId();
    }

    @Override
    public String value3() {
        return getTableName();
    }

    @Override
    public SeriesResultRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SeriesResultRecord value2(Long value) {
        setInvocationId(value);
        return this;
    }

    @Override
    public SeriesResultRecord value3(String value) {
        setTableName(value);
        return this;
    }

    @Override
    public SeriesResultRecord values(Long value1, Long value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SeriesResultRecord
     */
    public SeriesResultRecord() {
        super(SeriesResult.SERIES_RESULT);
    }

    /**
     * Create a detached, initialised SeriesResultRecord
     */
    public SeriesResultRecord(Long id, Long invocationId, String tableName) {
        super(SeriesResult.SERIES_RESULT);

        setId(id);
        setInvocationId(invocationId);
        setTableName(tableName);
    }
}
