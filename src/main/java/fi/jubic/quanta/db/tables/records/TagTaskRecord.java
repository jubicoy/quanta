/*
 * This file is generated by jOOQ.
 */
package fi.jubic.quanta.db.tables.records;


import fi.jubic.quanta.db.tables.TagTask;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TagTaskRecord extends UpdatableRecordImpl<TagTaskRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>tag_task.tag_id</code>.
     */
    public void setTagId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>tag_task.tag_id</code>.
     */
    public Long getTagId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>tag_task.task_id</code>.
     */
    public void setTaskId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>tag_task.task_id</code>.
     */
    public Long getTaskId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TagTask.TAG_TASK.TAG_ID;
    }

    @Override
    public Field<Long> field2() {
        return TagTask.TAG_TASK.TASK_ID;
    }

    @Override
    public Long component1() {
        return getTagId();
    }

    @Override
    public Long component2() {
        return getTaskId();
    }

    @Override
    public Long value1() {
        return getTagId();
    }

    @Override
    public Long value2() {
        return getTaskId();
    }

    @Override
    public TagTaskRecord value1(Long value) {
        setTagId(value);
        return this;
    }

    @Override
    public TagTaskRecord value2(Long value) {
        setTaskId(value);
        return this;
    }

    @Override
    public TagTaskRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TagTaskRecord
     */
    public TagTaskRecord() {
        super(TagTask.TAG_TASK);
    }

    /**
     * Create a detached, initialised TagTaskRecord
     */
    public TagTaskRecord(Long tagId, Long taskId) {
        super(TagTask.TAG_TASK);

        setTagId(tagId);
        setTaskId(taskId);
    }
}
