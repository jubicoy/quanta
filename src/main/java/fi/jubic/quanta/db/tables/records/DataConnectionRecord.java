/*
 * This file is generated by jOOQ.
 */
package fi.jubic.quanta.db.tables.records;


import fi.jubic.quanta.db.tables.DataConnection;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataConnectionRecord extends UpdatableRecordImpl<DataConnectionRecord> implements Record6<Long, String, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>data_connection.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>data_connection.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>data_connection.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>data_connection.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>data_connection.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>data_connection.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>data_connection.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>data_connection.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>data_connection.configuration</code>.
     */
    public void setConfiguration(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>data_connection.configuration</code>.
     */
    public String getConfiguration() {
        return (String) get(4);
    }

    /**
     * Setter for <code>data_connection.deleted_at</code>.
     */
    public void setDeletedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>data_connection.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, String, String, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return DataConnection.DATA_CONNECTION.ID;
    }

    @Override
    public Field<String> field2() {
        return DataConnection.DATA_CONNECTION.NAME;
    }

    @Override
    public Field<String> field3() {
        return DataConnection.DATA_CONNECTION.DESCRIPTION;
    }

    @Override
    public Field<String> field4() {
        return DataConnection.DATA_CONNECTION.TYPE;
    }

    @Override
    public Field<String> field5() {
        return DataConnection.DATA_CONNECTION.CONFIGURATION;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return DataConnection.DATA_CONNECTION.DELETED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getConfiguration();
    }

    @Override
    public LocalDateTime component6() {
        return getDeletedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getConfiguration();
    }

    @Override
    public LocalDateTime value6() {
        return getDeletedAt();
    }

    @Override
    public DataConnectionRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public DataConnectionRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public DataConnectionRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public DataConnectionRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public DataConnectionRecord value5(String value) {
        setConfiguration(value);
        return this;
    }

    @Override
    public DataConnectionRecord value6(LocalDateTime value) {
        setDeletedAt(value);
        return this;
    }

    @Override
    public DataConnectionRecord values(Long value1, String value2, String value3, String value4, String value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DataConnectionRecord
     */
    public DataConnectionRecord() {
        super(DataConnection.DATA_CONNECTION);
    }

    /**
     * Create a detached, initialised DataConnectionRecord
     */
    public DataConnectionRecord(Long id, String name, String description, String type, String configuration, LocalDateTime deletedAt) {
        super(DataConnection.DATA_CONNECTION);

        setId(id);
        setName(name);
        setDescription(description);
        setType(type);
        setConfiguration(configuration);
        setDeletedAt(deletedAt);
    }
}
