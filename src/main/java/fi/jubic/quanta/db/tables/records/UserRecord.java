/*
 * This file is generated by jOOQ.
 */
package fi.jubic.quanta.db.tables.records;


import fi.jubic.quanta.db.tables.User;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record6<Long, String, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>user.role</code>.
     */
    public void setRole(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>user.role</code>.
     */
    public String getRole() {
        return (String) get(1);
    }

    /**
     * Setter for <code>user.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>user.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>user.password_hash</code>.
     */
    public void setPasswordHash(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>user.password_hash</code>.
     */
    public String getPasswordHash() {
        return (String) get(3);
    }

    /**
     * Setter for <code>user.salt</code>.
     */
    public void setSalt(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>user.salt</code>.
     */
    public String getSalt() {
        return (String) get(4);
    }

    /**
     * Setter for <code>user.creation_date</code>.
     */
    public void setCreationDate(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>user.creation_date</code>.
     */
    public LocalDateTime getCreationDate() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, String, String, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.ROLE;
    }

    @Override
    public Field<String> field3() {
        return User.USER.NAME;
    }

    @Override
    public Field<String> field4() {
        return User.USER.PASSWORD_HASH;
    }

    @Override
    public Field<String> field5() {
        return User.USER.SALT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return User.USER.CREATION_DATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRole();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getPasswordHash();
    }

    @Override
    public String component5() {
        return getSalt();
    }

    @Override
    public LocalDateTime component6() {
        return getCreationDate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRole();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getPasswordHash();
    }

    @Override
    public String value5() {
        return getSalt();
    }

    @Override
    public LocalDateTime value6() {
        return getCreationDate();
    }

    @Override
    public UserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setRole(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setPasswordHash(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setSalt(value);
        return this;
    }

    @Override
    public UserRecord value6(LocalDateTime value) {
        setCreationDate(value);
        return this;
    }

    @Override
    public UserRecord values(Long value1, String value2, String value3, String value4, String value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, String role, String name, String passwordHash, String salt, LocalDateTime creationDate) {
        super(User.USER);

        setId(id);
        setRole(role);
        setName(name);
        setPasswordHash(passwordHash);
        setSalt(salt);
        setCreationDate(creationDate);
    }
}
