/*
 * This file is generated by jOOQ.
 */
package fi.jubic.quanta.db.tables.records;


import fi.jubic.quanta.db.tables.DetectionResult;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DetectionResultRecord extends UpdatableRecordImpl<DetectionResultRecord> implements Record8<Long, Long, Timestamp, Timestamp, String, String, Double, String> {

    private static final long serialVersionUID = 106106348;

    /**
     * Setter for <code>detection_result.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>detection_result.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>detection_result.invocation_id</code>.
     */
    public void setInvocationId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>detection_result.invocation_id</code>.
     */
    public Long getInvocationId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>detection_result.starting_time</code>.
     */
    public void setStartingTime(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>detection_result.starting_time</code>.
     */
    public Timestamp getStartingTime() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>detection_result.ending_time</code>.
     */
    public void setEndingTime(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>detection_result.ending_time</code>.
     */
    public Timestamp getEndingTime() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>detection_result.values</code>.
     */
    public void setValues(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>detection_result.values</code>.
     */
    public String getValues() {
        return (String) get(4);
    }

    /**
     * Setter for <code>detection_result.classification</code>.
     */
    public void setClassification(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>detection_result.classification</code>.
     */
    public String getClassification() {
        return (String) get(5);
    }

    /**
     * Setter for <code>detection_result.probability</code>.
     */
    public void setProbability(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>detection_result.probability</code>.
     */
    public Double getProbability() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>detection_result.delta_max</code>.
     */
    public void setDeltaMax(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>detection_result.delta_max</code>.
     */
    public String getDeltaMax() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, Long, Timestamp, Timestamp, String, String, Double, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, Long, Timestamp, Timestamp, String, String, Double, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return DetectionResult.DETECTION_RESULT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return DetectionResult.DETECTION_RESULT.INVOCATION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return DetectionResult.DETECTION_RESULT.STARTING_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return DetectionResult.DETECTION_RESULT.ENDING_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return DetectionResult.DETECTION_RESULT.VALUES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return DetectionResult.DETECTION_RESULT.CLASSIFICATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return DetectionResult.DETECTION_RESULT.PROBABILITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return DetectionResult.DETECTION_RESULT.DELTA_MAX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getInvocationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getStartingTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getEndingTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getValues();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getClassification();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component7() {
        return getProbability();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getDeltaMax();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getInvocationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getStartingTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getEndingTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getValues();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getClassification();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getProbability();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getDeltaMax();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DetectionResultRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DetectionResultRecord value2(Long value) {
        setInvocationId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DetectionResultRecord value3(Timestamp value) {
        setStartingTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DetectionResultRecord value4(Timestamp value) {
        setEndingTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DetectionResultRecord value5(String value) {
        setValues(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DetectionResultRecord value6(String value) {
        setClassification(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DetectionResultRecord value7(Double value) {
        setProbability(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DetectionResultRecord value8(String value) {
        setDeltaMax(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DetectionResultRecord values(Long value1, Long value2, Timestamp value3, Timestamp value4, String value5, String value6, Double value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DetectionResultRecord
     */
    public DetectionResultRecord() {
        super(DetectionResult.DETECTION_RESULT);
    }

    /**
     * Create a detached, initialised DetectionResultRecord
     */
    public DetectionResultRecord(Long id, Long invocationId, Timestamp startingTime, Timestamp endingTime, String values, String classification, Double probability, String deltaMax) {
        super(DetectionResult.DETECTION_RESULT);

        set(0, id);
        set(1, invocationId);
        set(2, startingTime);
        set(3, endingTime);
        set(4, values);
        set(5, classification);
        set(6, probability);
        set(7, deltaMax);
    }
}
