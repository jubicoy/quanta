/*
 * This file is generated by jOOQ.
 */
package fi.jubic.quanta.db.tables;


import fi.jubic.quanta.db.DefaultSchema;
import fi.jubic.quanta.db.Indexes;
import fi.jubic.quanta.db.Keys;
import fi.jubic.quanta.db.tables.records.SeriesTableRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeriesTable extends TableImpl<SeriesTableRecord> {

    private static final long serialVersionUID = -169225344;

    /**
     * The reference instance of <code>series_table</code>
     */
    public static final SeriesTable SERIES_TABLE = new SeriesTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SeriesTableRecord> getRecordType() {
        return SeriesTableRecord.class;
    }

    /**
     * The column <code>series_table.id</code>.
     */
    public final TableField<SeriesTableRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>series_table.table_name</code>.
     */
    public final TableField<SeriesTableRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false), this, "");

    /**
     * The column <code>series_table.data_series_id</code>.
     */
    public final TableField<SeriesTableRecord, Long> DATA_SERIES_ID = createField("data_series_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>series_table.delete_at</code>.
     */
    public final TableField<SeriesTableRecord, Timestamp> DELETE_AT = createField("delete_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>series_table</code> table reference
     */
    public SeriesTable() {
        this(DSL.name("series_table"), null);
    }

    /**
     * Create an aliased <code>series_table</code> table reference
     */
    public SeriesTable(String alias) {
        this(DSL.name(alias), SERIES_TABLE);
    }

    /**
     * Create an aliased <code>series_table</code> table reference
     */
    public SeriesTable(Name alias) {
        this(alias, SERIES_TABLE);
    }

    private SeriesTable(Name alias, Table<SeriesTableRecord> aliased) {
        this(alias, aliased, null);
    }

    private SeriesTable(Name alias, Table<SeriesTableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SeriesTable(Table<O> child, ForeignKey<O, SeriesTableRecord> key) {
        super(child, key, SERIES_TABLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SERIES_TABLE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SeriesTableRecord> getPrimaryKey() {
        return Keys.SERIES_TABLE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SeriesTableRecord>> getKeys() {
        return Arrays.<UniqueKey<SeriesTableRecord>>asList(Keys.SERIES_TABLE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SeriesTableRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SeriesTableRecord, ?>>asList(Keys.SERIES_TABLE__FK_SERIES_TABLE_DATA_SERIES_ID);
    }

    public DataSeries dataSeries() {
        return new DataSeries(this, Keys.SERIES_TABLE__FK_SERIES_TABLE_DATA_SERIES_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeriesTable as(String alias) {
        return new SeriesTable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SeriesTable as(Name alias) {
        return new SeriesTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SeriesTable rename(String name) {
        return new SeriesTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SeriesTable rename(Name name) {
        return new SeriesTable(name, null);
    }
}
