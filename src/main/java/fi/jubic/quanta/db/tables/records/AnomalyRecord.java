/*
 * This file is generated by jOOQ.
 */
package fi.jubic.quanta.db.tables.records;


import fi.jubic.quanta.db.tables.Anomaly;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnomalyRecord extends UpdatableRecordImpl<AnomalyRecord> implements Record8<Long, Long, LocalDateTime, LocalDateTime, String, String, Double, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>anomaly.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>anomaly.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>anomaly.invocation_id</code>.
     */
    public void setInvocationId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>anomaly.invocation_id</code>.
     */
    public Long getInvocationId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>anomaly.starting_time</code>.
     */
    public void setStartingTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>anomaly.starting_time</code>.
     */
    public LocalDateTime getStartingTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>anomaly.ending_time</code>.
     */
    public void setEndingTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>anomaly.ending_time</code>.
     */
    public LocalDateTime getEndingTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>anomaly.sample</code>.
     */
    public void setSample(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>anomaly.sample</code>.
     */
    public String getSample() {
        return (String) get(4);
    }

    /**
     * Setter for <code>anomaly.classification</code>.
     */
    public void setClassification(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>anomaly.classification</code>.
     */
    public String getClassification() {
        return (String) get(5);
    }

    /**
     * Setter for <code>anomaly.probability</code>.
     */
    public void setProbability(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>anomaly.probability</code>.
     */
    public Double getProbability() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>anomaly.metadata</code>.
     */
    public void setMetadata(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>anomaly.metadata</code>.
     */
    public String getMetadata() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, LocalDateTime, LocalDateTime, String, String, Double, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, LocalDateTime, LocalDateTime, String, String, Double, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Anomaly.ANOMALY.ID;
    }

    @Override
    public Field<Long> field2() {
        return Anomaly.ANOMALY.INVOCATION_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Anomaly.ANOMALY.STARTING_TIME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Anomaly.ANOMALY.ENDING_TIME;
    }

    @Override
    public Field<String> field5() {
        return Anomaly.ANOMALY.SAMPLE;
    }

    @Override
    public Field<String> field6() {
        return Anomaly.ANOMALY.CLASSIFICATION;
    }

    @Override
    public Field<Double> field7() {
        return Anomaly.ANOMALY.PROBABILITY;
    }

    @Override
    public Field<String> field8() {
        return Anomaly.ANOMALY.METADATA;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getInvocationId();
    }

    @Override
    public LocalDateTime component3() {
        return getStartingTime();
    }

    @Override
    public LocalDateTime component4() {
        return getEndingTime();
    }

    @Override
    public String component5() {
        return getSample();
    }

    @Override
    public String component6() {
        return getClassification();
    }

    @Override
    public Double component7() {
        return getProbability();
    }

    @Override
    public String component8() {
        return getMetadata();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getInvocationId();
    }

    @Override
    public LocalDateTime value3() {
        return getStartingTime();
    }

    @Override
    public LocalDateTime value4() {
        return getEndingTime();
    }

    @Override
    public String value5() {
        return getSample();
    }

    @Override
    public String value6() {
        return getClassification();
    }

    @Override
    public Double value7() {
        return getProbability();
    }

    @Override
    public String value8() {
        return getMetadata();
    }

    @Override
    public AnomalyRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AnomalyRecord value2(Long value) {
        setInvocationId(value);
        return this;
    }

    @Override
    public AnomalyRecord value3(LocalDateTime value) {
        setStartingTime(value);
        return this;
    }

    @Override
    public AnomalyRecord value4(LocalDateTime value) {
        setEndingTime(value);
        return this;
    }

    @Override
    public AnomalyRecord value5(String value) {
        setSample(value);
        return this;
    }

    @Override
    public AnomalyRecord value6(String value) {
        setClassification(value);
        return this;
    }

    @Override
    public AnomalyRecord value7(Double value) {
        setProbability(value);
        return this;
    }

    @Override
    public AnomalyRecord value8(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public AnomalyRecord values(Long value1, Long value2, LocalDateTime value3, LocalDateTime value4, String value5, String value6, Double value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnomalyRecord
     */
    public AnomalyRecord() {
        super(Anomaly.ANOMALY);
    }

    /**
     * Create a detached, initialised AnomalyRecord
     */
    public AnomalyRecord(Long id, Long invocationId, LocalDateTime startingTime, LocalDateTime endingTime, String sample, String classification, Double probability, String metadata) {
        super(Anomaly.ANOMALY);

        setId(id);
        setInvocationId(invocationId);
        setStartingTime(startingTime);
        setEndingTime(endingTime);
        setSample(sample);
        setClassification(classification);
        setProbability(probability);
        setMetadata(metadata);
    }
}
